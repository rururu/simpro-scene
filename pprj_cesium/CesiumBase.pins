; Tue Apr 28 11:38:37 MSK 2020
; 
;+ (version "3.5")
;+ (build "Build 663")

([CesiumBase_Class0] of  ClsRequired

	(cloFunctions
		[CesiumBase_Class20005]
		[CesiumBase_Class20006]
		[CesiumBase_Class10001]
		[CesiumBase_Class10007]
		[CesiumBase_Class20002]
		[CesiumBase_Class30000]
		[CesiumBase_Class20000]
		[CesiumBase_Class50000]
		[CesiumBase_Class40001]
		[CesiumBase_Class40000]
		[CesiumBase_Class10000])
	(cloNamespace [CesiumBase_Class1])
	(cloVars
		[CesiumBase_Class10002]
		[CesiumBase_Class10005]
		[CesiumBase_Class10004]
		[CesiumBase_Class10003]
		[CesiumBase_Class10006]
		[CesiumBase_Class20001]
		[CesiumBase_Class10008]
		[CesiumBase_Class30001]
		[CesiumBase_Class30002]
		[CesiumBase_Class30003]
		[CesiumBase_Class40002])
	(title "Cesium Client"))

([CesiumBase_Class1] of  CloNamespace

	(title "cesium.client"))

([CesiumBase_Class10000] of  CloFunction

	(source "(letfn[(fly-one [cam next]\n            (let [orient (js/Cesium.HeadingPitchRoll. (nth (@ORBIT :headings) next) (.-pitch cam) (.-roll cam))]\n              (.flyTo cam #js{:destination (nth (@ORBIT :ring) next)\n                                       :orientation #js{:heading (.-heading orient)\n                                                               :pitch (.-pitch orient)\n                                                               :roll (.-roll orient)}\n                                       :duration (@ORBIT :step-sec)\n                                       :easingFunction js/Cesium.EasingFunction.LINEAR_NONE\n                                       :complete #(fly-next cam (inc next))\n                                       :cancel #(fly-cancel cam next)})))\n          (fly-next [cam next]\n            (if (< next (count (@ORBIT :ring)))\n              (fly-one cam next)\n              (fly-one cam 0)))\n          (fly-cancel [cam next]\n             (vswap! ORBIT assoc :next next))\n          (next [az azs]\n            (let [N (count azs)\n                   n (+ (/ N 2) (count (filter #(< % az) azs)))]\n              (if (> n (dec N)) (- n N) n)))]\n            \n  (let [obut (.createElement js/document \"button\")]\n    (set! (.-innerHTML obut) \"Toggle orbit\")\n    (.add (.-classList obut) \"cesium-button\")\n    (.prepend (.querySelector js/document \".cesium-viewer-toolbar\") obut)\n    (set! (.-onclick obut)\n      (fn []\n        (condp = (@ORBIT :status)\n          :init\n          (vswap! ORBIT assoc :status :stop)\n          :stop\n          (let [steps (@ORBIT :steps)\n                 radm (@ORBIT :radius-m)\n                 radr (* (/ radm 1852 60 180) js/Math.PI)\n                 [lam phi hgt :as look] (look-at camera radm)\n                 [azs pts] (azimuths&points [lam phi] radr hgt steps)\n                 ring (vec (map #(js/Cesium.Cartesian3.fromRadians (first %) (second %) (nth % 2)) pts))\n                 headings (vec (map #(normaz (+ % js/Math.PI)) azs))\n                 begin (next (.-heading camera) azs)]\n            (vswap! ORBIT assoc :ring ring\n                                             :headings headings\n                                             :center (js/Cesium.Cartesian3.fromRadians lam phi hgt)\n                                             :next begin\n                                             :status :run)\n            (fly-one camera begin))\n          :run\n          (do (.cancelFlight camera)\n            (vswap! ORBIT assoc :status :stop)))))))")
	(title "add-orbit-button [camera]"))

([CesiumBase_Class10001] of  CloFunction

	(source "(let [{:keys [longitude latitude height heading pitch roll]} view\n       pos (js/Cesium.Cartesian3.fromDegrees. longitude latitude height)\n       orient (js/Cesium.HeadingPitchRoll.fromDegrees heading pitch roll)]\n  (def HOME-VIEW (clj->js {:destination pos\n                                         :orientation {:heading (.-heading orient)\n                                                              :pitch (.-pitch orient)\n                                                              :roll (.-roll orient)}\n                                         ;; animation options\n                                         :duration 4.0\n                                         :maximumHeight 2000\n                                         :pitchAdjustHeight 2000\n                                         :endTransform js/Cesium.Matrix4.IDENTITY}))\n  (.addEventListener (.-beforeExecute (.-command (.-viewModel (.-homeButton VIEWER))))\n                                 (fn [e]\n                                   (set! (.-cancel e) true)\n                                   (.flyTo camera HOME-VIEW)))\n  (.flyTo camera HOME-VIEW))")
	(title "camera-home [camera view ]"))

([CesiumBase_Class10002] of  CloVar

	(source "(js/Cesium.Viewer. \"cesiumContainer\")")
	(title "VIEWER"))

([CesiumBase_Class10003] of  CloVar

	(source "(.-camera SCENE)")
	(title "CAMERA"))

([CesiumBase_Class10004] of  CloVar

	(source "(.-scene VIEWER)")
	(title "SCENE"))

([CesiumBase_Class10005] of  CloVar

	(source "(.-clock VIEWER)")
	(title "CLOCK"))

([CesiumBase_Class10006] of  CloVar

	(source "(.-canvas SCENE)")
	(title "CANVAS"))

([CesiumBase_Class10007] of  CloFunction

	(source "(let [{:keys [animate start stop current mult]} settings]\n  (set! (.-shouldAnimate clock) animate)\n  (set! (.-startTime clock) (js/Cesium.JulianDate.fromIso8601 start))\n  (set! (.-stopTime clock) (js/Cesium.JulianDate.fromIso8601 stop))\n  (set! (.-currentTime clock) (js/Cesium.JulianDate.fromIso8601 current))\n  (set! (.-multiplier clock) mult)\n  (set! (.-clockStep clock) js/Cesium.ClockStep.SYSTEM_CLOCK_MULTIPLIER)\n  (set! (.-clockRange clock) js/Cesium.ClockRange.LOOP_STOP)\n  (.zoomTo (.-timeline viewer) (.-startTime clock) (.-stopTime clock)))")
	(title "clock-settings [clock settings viewer]"))

([CesiumBase_Class10008] of  CloVar

	(source "{:animate true\n  :start \"2020-08-08T16:00:00Z\"\n  :stop \"2020-08-08T16:20:00Z\"\n  :current \"2020-08-08T16:00:00Z\"\n  :mult 4}")
	(title "CLOCK-SET"))

([CesiumBase_Class10009] of  ClsMain

	(asset-path "js/test")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions [CesiumBase_Class20003])
	(cloNamespace [CesiumBase_Class10010])
	(compiler-options "{:verbose false}")
	(css [CesiumBase_Class10012])
	(epilogue "(enable-console-print!)\n(set! (.-onload js/window) (init-client))")
	(html [CesiumBase_Class10011])
	(output-dir "resources/public/js/test")
	(output-to "resources/public/js/test.js")
	(required [CesiumBase_Class0])
	(store-in "src/cljs/test")
	(title "Test Client"))

([CesiumBase_Class10010] of  CloNamespace

	(source "(:require \n  [cesium.client :refer\n    [add-imagery-by-asset-id\n     add-terrain\n     camera-home\n     clock-settings\n     load-data\n     start-czml-processing\n     look-at\n     add-orbit-button\n     VIEWER\n     CLOCK\n     SCENE\n     CAMERA\n     CANVAS\n     HOME-VIEW\n     CLOCK-SET\n     CZML-DS\n     CZML-URL\n     CZML-DEBUG]])")
	(title "cesium.testclient"))

([CesiumBase_Class10011] of  HTML

	(source "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <!-- Use correct character set. -->\n        <meta charset=\"utf-8\">\n        <!-- Tell IE to use the latest, best version. -->\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n        <!-- Make the app on mobile take up the full browser screen and disable user scaling. -->\n        <meta name=\"viewport\"\n            content=\"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\">\n        <title>Everest</title>\n        <!-- The Cesium library. -->\n        <script src=\"Cesium/Cesium.js\"></script>\n        <link href=\"Cesium/Widgets/widgets.css\" rel=\"stylesheet\">\n        <!-- Style our app. -->\n        <link rel=\"stylesheet\" href=\"css/test.css\" media=\"screen\">\n        <style>\n          @import url(Cesium/Widgets/widgets.css);\n        </style>\n    </head>\n    <body>\n       <!-- A container for the Cesium Viewer to live in. -->\n        <div id=\"cesiumContainer\"></div>\n\n        <script>\n          // Grant your CesiumJS app access to your ion assets\n          // This is your actual default access token, you can copy/paste this directly into your app code\n          Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwN2EzYzEyNS1mMmNlLTRlYjEtYjRiMS04OTliNjhkZjI4NzQiLCJpZCI6MzY0MCwic2NvcGVzIjpbImFzciIsImdjIl0sImlhdCI6MTUzODQxODg5OH0.E2p7oe8fLJOtyawv0uT9zBZw4oyKZ6Vt3CZsE0FKeJw';\n        </script>\n        <script src=\"js/test.js\"></script>\n    </body>\n</html>")
	(store-in "resources/public")
	(title "test"))

([CesiumBase_Class10012] of  CSS

	(source "html, body, #cesiumContainer {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    font-family: sans-serif;\n    background: #000;\n}")
	(store-in "resources/public/css")
	(title "test"))

([CesiumBase_Class20000] of  CloFunction

	(source "(let [cosphi1 (js/Math.cos phi1)\n       sinphi1 (js/Math.sin phi1)\n       cosaz (js/Math.cos az)\n       sinaz (js/Math.sin az)\n       sinc (js/Math.sin c)\n       cosc (js/Math.cos c)\n       phi2 (js/Math.asin (+ (* sinphi1 cosc) (* cosphi1 sinc cosaz)))\n       lam2 (+ (js/Math.atan2 (* sinc sinaz) (- (* cosphi1 cosc) (* sinphi1 sinc cosaz))) lambda0)]\n  [lam2 phi2])")
	(title "position-js [^double lambda0 ^double phi1 ^double c ^double az]"))

([CesiumBase_Class20001] of  CloVar

	(source "{:latitude 28.02\n  :longitude 86.93\n  :height 8848\n  :heading 180\n  :pitch -10\n  :roll 0}")
	(title "HOME-VIEW"))

([CesiumBase_Class20002] of  CloFunction

	(source "(let [promise (condp = format\n                       :GeoJSON (js/Cesium.GeoJsonDataSource.load source options)\n                       :CZML (js/Cesium.CzmlDataSource.load source options)\n                       :KML (js/Cesium.KmlDataSource.load source options))]\n  (.then promise (fn [ds] \n                            (.add (.-dataSources viewer) ds)\n                            (processor ds))))")
	(title "load-data [format source options viewer processor]"))

([CesiumBase_Class20003] of  CloFunction

	(source "(add-terrain nil VIEWER)\n(camera-home CAMERA HOME-VIEW)\n(start-czml-processing CZML-URL VIEWER)\n(add-orbit-button CAMERA)")
	(title "init-client []"))

([CesiumBase_Class20005] of  CloFunction

	(source "(let [ilays (.-imageryLayers viewer)]\n  (.remove ilays (.get ilays 0))\n  (.addImageryProvider ilays (js/Cesium.IonImageryProvider. #js{:assetId id})))")
	(title "add-imagery-by-asset-id [id viewer]"))

([CesiumBase_Class20006] of  CloFunction

	(source "(set! (.-terrainProvider viewer) (js/Cesium.createWorldTerrain. options))\n(set! (.-depthTestAgainstTerrain (.-globe (.-scene viewer))) true)")
	(title "add-terrain [options viewer]"))

([CesiumBase_Class30000] of  CloFunction

	(source "(letfn [(cz-processor [e]\n             (let [data (.-data e)]\n               (if CZML-DEBUG\n                 (println :data data))\n               (.process CZML-DS (js/JSON.parse data))))]\n  (.add (.-dataSources viewer) CZML-DS)\n  (.addEventListener (js/EventSource. CZML-URL) \"czml\" cz-processor false))")
	(title "start-czml-processing [czml-url viewer]"))

([CesiumBase_Class30001] of  CloVar

	(source "(js/Cesium.CzmlDataSource.)")
	(title "CZML-DS"))

([CesiumBase_Class30002] of  CloVar

	(source "\"http://localhost:4448/czml\"")
	(title "CZML-URL"))

([CesiumBase_Class30003] of  CloVar

	(source "false")
	(title "CZML-DEBUG"))

([CesiumBase_Class30004] of  CloProgram

	(cloFunctions
		[CesiumBase_Class30008]
		[CesiumBase_Class30006]
		[CesiumBase_Class30007]
		[CesiumBase_Class30009])
	(cloNamespace [CesiumBase_Class30005])
	(title "CZML Generator"))

([CesiumBase_Class30005] of  CloNamespace

	(title "czml.generator"))

([CesiumBase_Class30006] of  CloFunction

	(source "([lalo-points height-ref size]\n  (let [s (str \"[{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\"},\"\n             (apply \n               str \n               (map \n                 #(let [[iR iG iB iA] (nth %2 2)\n                           rgba (str \"[\" iR \",\" iG \",\" iB \",\" iA \"]\")]\n                     (str \"{\\\"id\\\":\\\"\" %1 \"\\\",\\\"position\\\":{\\\"cartographicDegrees\\\":[\" (second %2) \",\" (first %2) \",\" (nth %2 3) \"]},\\\"point\\\":{\\\"color\\\":{\\\"rgba\\\":\" rgba \"},\\\"pixelSize\\\":\" size \",\\\"heightReference\\\":\\\"\" height-ref \"\\\"}},\"))\n                 (range (count lalo-points))  \n                 lalo-points)))]\n    (str (.substring s 0 (dec (count s))) \"]\")))\n([lalo-points height height-ref size]\n  (let [s (str \"[{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\"},\"\n             (apply \n               str \n               (map \n                 #(let [[iR iG iB iA] (nth %2 2)\n                           rgba (str \"[\" iR \",\" iG \",\" iB \",\" iA \"]\")]\n                     (str \"{\\\"id\\\":\\\"\" %1 \"\\\",\\\"position\\\":{\\\"cartographicDegrees\\\":[\" (second %2) \",\" (first %2) \",\" height \"]},\\\"point\\\":{\\\"color\\\":{\\\"rgba\\\":\" rgba \"},\\\"pixelSize\\\":\" size \",\\\"heightReference\\\":\\\"\" height-ref \"\\\"}},\"))\n                 (range (count lalo-points))  \n                 lalo-points)))]\n    (str (.substring s 0 (dec (count s))) \"]\")))\n([lalo-points height height-ref [iR iG iB iA] size]\n  (let [rgba (str \"[\" iR \",\" iG \",\" iB \",\" iA \"]\")\n         s (str \"[{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\"},\"\n              (apply \n                str \n                (map \n                  #(str \"{\\\"id\\\":\\\"\" %1 \"\\\",\\\"position\\\":{\\\"cartographicDegrees\\\":[\" (second %2) \",\" (first %2) \",\" height \"]},\\\"point\\\":{\\\"color\\\":{\\\"rgba\\\":\" rgba \"},\\\"pixelSize\\\":\" size \",\\\"heightReference\\\":\\\"\" height-ref \"\\\"}},\") \n                  (range (count lalo-points))  \n                  lalo-points)))]\n    (str (.substring s 0 (dec (count s))) \"]\")))")
	(title "add-points"))

([CesiumBase_Class30007] of  CloFunction

	(source "(let [s (str \"[{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\"},\"\n            (apply str (map #(str \"{\\\"id\\\":\\\"\" % \"\\\",\\\"delete\\\":true},\") (range number))))]\n  (str (.substring s 0 (dec (count s))) \"]\"))")
	(title "delete-points [number]"))

([CesiumBase_Class30008] of  CloFunction

	(source "(str \"[{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\"},{\\\"id\\\":\\\"\" id \"\\\",\\\"delete\\\":true}]\")")
	(title "delete [id]"))

([CesiumBase_Class30009] of  CloFunction

	(source "(str \"[{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\"},{\\\"id\\\":\\\"\" id \"\\\",\\\"rectangle\\\":{\\\"coordinates\\\":{\\\"wsenDegrees\\\":[\" w \",\" s \",\" e \",\" n \"]},\\\"material\\\":{\\\"image\\\":{\\\"image\\\":{\\\"uri\\\":\\\"\" uri \"\\\"},\\\"color\\\":{\\\"rgba\\\":[255,255,255,\" trans \"]}}}}}]\")")
	(title "add-image [id uri [w s e n] trans]"))

([CesiumBase_Class30010] of  CesiumServer

	(butt-start-cs-server "Start/cesium.server/start-server")
	(butt-stop-cs-server "Stop/cesium.server/stop-server")
	(page "test.html")
	(port 4448))

([CesiumBase_Class40000] of  CloFunction

	(source "(let [cmp (.-position camera)\n       cmp (js/Cesium.Cartographic.fromCartesian cmp)\n       [lam phi hgt] [(.-longitude cmp) (.-latitude cmp) (.-height cmp)]\n       az (.-heading camera)\n       c (* (/ dist-m 1852 60 180) js/Math.PI)\n       [lam2 phi2] (position-js lam phi c az)]\n  [lam2 phi2 hgt])")
	(title "look-at [camera dist-m]"))

([CesiumBase_Class40001] of  CloFunction

	(source "(let [s (/ (* js/Math.PI 2) N)\n       azs (range 0 (* N s) s)]\n  [azs (vec (map #(concat (position-js c-lambda c-phi radr %) [hgt]) azs))])")
	(title "azimuths&points [[c-lambda c-phi] radr hgt N]"))

([CesiumBase_Class40002] of  CloVar

	(source "(volatile! \n  {:status :init\n    :steps 24\n    :ring []\n    :headings []\n    :next 0\n    :center nil\n    :radius-m 4000\n    :step-sec 2})")
	(title "ORBIT"))

([CesiumBase_Class50000] of  CloFunction

	(source "(cond \n  (> az js/Math.PI) (- az (* 2 js/Math.PI))\n  (< az (- js/Math.PI)) (+ az (* 2 js/Math.PI))\n  true az)")
	(title "normaz [az]"))

([CesiumServer_Class10001] of  CloFunction

	(source "(let [evt-hr (fn [dat]\n                   (str \"event: czml\\ndata: \" dat \"\\n\\n\"))\n       ee (deref (future (pump-out-czml)))\n       resp (if (seq ee)\n                 (apply str (map evt-hr ee))\n                 \"\")]\n  (-> (r/response resp)\n         (r/header \"Access-Control-Allow-Origin\" \"*\")\n         (r/header \"Content-Type\" \"text/event-stream;charset=utf-8\")))")
	(title "czml-events []"))

([CesiumServer_Class10002] of  CloVar

	(source "(defonce CZ-CHAN (chan))")
	(title "defonceCZ-CHAN"))

([CesiumServer_Class10003] of  CloFunction

	(source "(loop [[bit ch] (alts!! [CZ-CHAN] :default :none) bits []]\n  (if (= bit :none)\n    bits\n    (recur (alts!! [CZ-CHAN] :default :none) (conj bits bit))))")
	(title "pump-out-czml []"))

([CesiumServer_Class10004] of  CloFunction

	(source "(put! CZ-CHAN czml)")
	(title "send-czml [czml]"))

([CesiumServer_Class10005] of  CloVar

	(source "\"{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\"}\"")
	(title "DOC"))

([CesiumWorshop_Class10003] of  CloProgram

	(cloFunctions
		[CesiumServer_Class10004]
		[CesiumServer_Class10003]
		[CesiumServer_Class10001]
		[CesiumWorshop_Class10005]
		[CesiumWorshop_Class10010]
		[CesiumWorshop_Class10011])
	(cloNamespace [CesiumWorshop_Class10004])
	(cloVars
		[CesiumWorshop_Class10006]
		[CesiumWorshop_Class10007]
		[CesiumWorshop_Class10008]
		[CesiumWorshop_Class10009]
		[CesiumServer_Class10002]
		[CesiumServer_Class10005])
	(title "Cesium Server"))

([CesiumWorshop_Class10004] of  CloNamespace

	(source "(:require [ring.adapter.jetty :as jetty]\n              [ring.util.response :as r]\n              [compojure.core :refer [defroutes GET]]\n              [compojure.handler :as handler]\n              [compojure.route :as route]\n              [clojure.core.async :refer [chan alts!! put!]]\n              [czml.generator :refer :all])")
	(title "cesium.server"))

([CesiumWorshop_Class10005] of  CloFunction

	(source "(defroutes app-routes\n  (GET \"/\" [] (slurp (str ROOT PAGE)))\n  (GET \"/czml\" [] (czml-events))\n  (route/files \"/\" (do (println [:ROOT ROOT]) {:root ROOT}))\n  (route/resources \"/\")\n  (route/not-found \"Cesium Server: Not Found!\"))\n\n(defonce APP\n  (handler/site app-routes))")
	(title "init-server []"))

([CesiumWorshop_Class10006] of  CloVar

	(source "4442")
	(title "PORT"))

([CesiumWorshop_Class10007] of  CloVar

	(source "(str (System/getProperty \"user.dir\") \"/resources/public/\")")
	(title "ROOT"))

([CesiumWorshop_Class10008] of  CloVar

	(source "\"test.html\"")
	(title "PAGE"))

([CesiumWorshop_Class10009] of  CloVar

	(source "nil")
	(title "SERV"))

([CesiumWorshop_Class10010] of  CloFunction

	(source "([]\n  (start-server PORT))\n([port]\n  (if (nil? SERV)\n    (init-server))\n  (def SERV (jetty/run-jetty APP {:port port :join? false})))\n([hm inst]\n  (let [mp (into {} hm)]\n    (def PORT (mp \"port\"))\n    (def PAGE (mp \"page\"))\n    (start-server)))")
	(title "start-server"))

([CesiumWorshop_Class10011] of  CloFunction

	(source "([]\n  (when-let [serv SERV]\n    (.stop serv)\n    (def SERV nil)\n    (println \"Server stopped!\")))\n([hm inst]\n  (stop-server))")
	(title "stop-server"))
