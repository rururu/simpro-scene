; Sun Jun 20 14:59:33 MSK 2021
; 
;+ (version "3.5")
;+ (build "Build 663")

([PointCloud_Class0] of  CloProgram

	(cloFunctions
		[PointCloud_Class2]
		[PointCloud_Class20013]
		[PointCloud_Class10003]
		[PointCloud_Class10006])
	(cloNamespace [PointCloud_Class1])
	(cloVars
		[PointCloud_Class12]
		[PointCloud_Class20014]
		[PointCloud_Class20015]
		[PointCloud_Class20016]
		[PointCloud_Class20017]
		[PointCloud_Class20024])
	(title "Point Cloud"))

([PointCloud_Class1] of  CloNamespace

	(source "(:use protege.core)\n(:require\n  [clojure.java.io :as cio])")
	(title "point.cloud"))

([PointCloud_Class10000] of  CloFuncall

	(source "(sphere-gen [30.0 100 30.001] [60.0 100 60.0005] [100 100 150] \"PointCloud/SphereCloud/sphere_cloud.txt\")"))

([PointCloud_Class10001] of  CloFuncall

	(source "K"))

([PointCloud_Class10003] of  CloFunction

	(source "(let [ur (- (* R R) (* (- x X0) (- x X0)) (* (- y Y0) (- y Y0)))]\n  (if (>= ur 0)\n    (let [r (Math/sqrt ur)]\n      [(+ Z0 r) (- Z0 r)])\n    []))")
	(title "sphere-surface [x y]"))

([PointCloud_Class10006] of  CloFunction

	(source "(with-open [fos (cio/writer path)]\n  (let [s (/ Math/PI 500)\n         mx (* Math/PI 2)\n         r (/ R 100000)\n         teta (range 0 mx s)\n         phi (range 0 mx s)]\n    (def cnt 1)\n    (loop [tes teta fis phi]\n      (let [te (first tes)\n             fi (first fis)]\n        (if (some? te)\n          (if (some? fi)\n            (let [x (* r (Math/sin te) (Math/cos fi))\n                   y (* r (Math/sin te) (Math/sin fi))\n                   z (* r (Math/cos te))\n                   h (* z 100000)\n                   c (if (< (+ h h0) 0) color-neg color-pos)]\n              (.write fos (str (+ x x0) \" \" (+ y y0) \" \" (+ h h0) \" \" c \"\\n\"))\n              (def cnt (inc cnt))\n              (if (= (mod cnt TR-LINES) 0)\n                (future (println (str \"Processed \" cnt \" lines ...\"))))\n              (recur tes (rest fis)))\n            (recur (rest tes) phi)))))\n    (println \"Total \" (dec cnt) \" lines.\" )\n    (.close fos)))")
	(title "ball-gen [x0 y0 h0 R color-pos color-neg path]"))

([PointCloud_Class12] of  CloVar

	(source "10000")
	(title "TR-LINES"))

([PointCloud_Class2] of  CloFunction

	(source "([xd yd zd func path]\n  (with-open [fos (cio/writer path)]\n    (point-cloud-gen xd yd zd\n      (fn[x y z] (.write fos (str (double x) \" \" (double y) \" \" (double z) \" \" (func x y z) \"\\n\"))))\n    (.close fos)))      \n([xd yd zd func]\n  (let [[xmi xn xma] xd\n         [ymi yn yma] yd\n         [zmi zn zma] zd\n         xs (/ (- xma xmi) xn)\n         ys (/ (- yma ymi) yn)\n         zs (/ (- zma zmi) zn)]\n    (def cnt 1)\n    (loop [x xmi y ymi z zmi]\n      (if (<= x xma)\n        (if (<= y yma)\n          (if (<= z zma)\n            (do (func x y z)\n              (def cnt (inc cnt))\n              (if (= (mod cnt TR-LINES) 0)\n                (future (println (str \"Processed \" cnt \" lines ...\"))))\n              (recur x y (+ z zs)))\n            (recur x (+ y ys) zmi))\n          (recur (+ x xs) ymi zmi))))\n    (println \"Total \" (dec cnt) \" lines.\" )))")
	(title "point-cloud-gen"))

([PointCloud_Class20000] of  Openmap

	(components
		[igis_Class2]
		[igis_Class3]
		[igis_Class4]
		[igis_Class12]
		[igis_Class40000]
		[igis_Class40001]
		[igis_Class70000]
		[igis_Class100005]
		[igis_Class100000]
		[igis_Class14]
		[igis_Class15]
		[igis_Class16]
		[igis_Class17]
		[igis_Class18]
		[igis_Class19]
		[igis_Class20]
		[igis_Class90000]
		[igis_Class21]
		[igis_Class22]
		[igis_Class23]
		[igis_Class25]
		[igis_Class26]
		[igis_Class27]
		[igis_Class28]
		[igis_Class29]
		[igis_Class30]
		[igis_Class2])
	(Debug "FINE")
	(label "Point Cloud Map")
	(Latitude "60.0")
	(layers
		[igis_Class40012]
		[igis_Class120000]
		[NiceSPb_Class160725]
		[igis_Class40011]
		[igis_Class110000])
	(Longitude "30.0")
	(Scale "100000")
	(startUpLayers
		[igis_Class40012]
		[NiceSPb_Class160725]
		[igis_Class40011]))

([PointCloud_Class20001] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [PointCloud_Class20000])
	(%3ACREATION-TIMESTAMP "2021.06.09 11:08:56.576 MSK")
	(%3ACREATOR "ru"))

([PointCloud_Class20004] of  CloFuncall

	(source "(point-cloud-gen [31.0 100 31.1] [59.9 100 60.0] [100 100 200] (fn[x y z](str \"255 0 0\")) \"PointCloud/point_cloud.txt\")"))

([PointCloud_Class20013] of  CloFunction

	(source "(< (Math/sqrt (+ (* (- x X0) (- x X0))\n                           (* (- y Y0) (- y Y0))\n                           (* (* (- z Z0) K) (* (- z Z0) K)))) R)")
	(title "in-sphere? [x y z]"))

([PointCloud_Class20014] of  CloVar

	(source "0")
	(title "X0"))

([PointCloud_Class20015] of  CloVar

	(source "0")
	(title "Y0"))

([PointCloud_Class20016] of  CloVar

	(source "0")
	(title "Z0"))

([PointCloud_Class20017] of  CloVar

	(source "0")
	(title "R"))

([PointCloud_Class20019] of  CloFuncall

	(source "(sphere-gen [30.0 100 30.001] [60.0 100 60.0005] [100 100 150] \"SphereCloud/sphere_cloud.txt\")"))

([PointCloud_Class20020] of  CloFuncall

	(source "X0"))

([PointCloud_Class20021] of  CloFuncall

	(source "Y0"))

([PointCloud_Class20022] of  CloFuncall

	(source "Z0"))

([PointCloud_Class20023] of  CloFuncall

	(source "R"))

([PointCloud_Class20024] of  CloVar

	(source "0")
	(title "K"))

([PointCloud_Class3] of  CloFuncall

	(source "(in-ns 'point.cloud)"))

([PointCloud_Class40000] of  ClsMain

	(asset-path "js/cezium/poic")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions
		[PointCloud_Class50000]
		[PointCloud_Class60000]
		[PointCloud_Class40002])
	(cloNamespace [PointCloud_Class40001])
	(cloVars
		[PointCloud_Class50001]
		[PointCloud_Class90000])
	(compiler-options "{:verbose false}")
	(css [CesiumBase_Class10012])
	(epilogue "(enable-console-print!)\n(set! (.-onload js/window) (init-client))")
	(html [PointCloud_Class40003])
	(output-dir "resources/public/js/cezium/poic")
	(output-to "resources/public/js/cezium/poic.js")
	(required [CesiumBase_Class0])
	(store-in "src/cljs/cezium")
	(title "PointCloud Client"))

([PointCloud_Class40001] of  CloNamespace

	(source "(:require \n  [cesium.client :refer\n    [add-imagery-by-asset-id\n     add-terrain\n     camera-home\n     clock-settings\n     load-data\n     start-event-processing\n     look-at\n     add-orbit-button\n     mouse-move\n     PORT\n     VIEWER\n     CLOCK\n     SCENE\n     CAMERA\n     CANVAS\n     HOME-VIEW\n     CLOCK-SET\n     EVENT-DEBUG]])")
	(title "poic.client"))

([PointCloud_Class40002] of  CloFunction

	(source "(add-terrain-transparent nil VIEWER)\n(camera-home CAMERA FIORD)\n(start-event-processing PORT VIEWER)\n(add-orbit-button CAMERA)\n(mouse-move)\n(point-cloud)")
	(title "init-client []"))

([PointCloud_Class40003] of  HTML

	(source "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <!-- Use correct character set. -->\n        <meta charset=\"utf-8\">\n        <!-- Tell IE to use the latest, best version. -->\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n        <!-- Make the app on mobile take up the full browser screen and disable user scaling. -->\n        <meta name=\"viewport\"\n            content=\"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\">\n        <title>Cesium</title>\n        <!-- The Cesium library. -->\n        <script>window.CESIUM_BASE_URL = \"./Cesium/\";</script>\n        <script src=\"Cesium/Cesium.js\"></script>\n        <link href=\"Cesium/Widgets/widgets.css\" rel=\"stylesheet\">\n        <!-- Style our app. -->\n        <link rel=\"stylesheet\" href=\"cezium/css/test.css\" media=\"screen\">\n        <style>\n          @import url(Cesium/Widgets/widgets.css);\n        </style>\n    </head>\n    <body>\n       <!-- A container for the Cesium Viewer to live in. -->\n        <div id=\"cesiumContainer\"></div>\n        <div id=\"mouse-pos\"></div>\n        <script>\n          // Grant your CesiumJS app access to your ion assets\n          // This is your actual default access token, you can copy/paste this directly into your app code\n          Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwN2EzYzEyNS1mMmNlLTRlYjEtYjRiMS04OTliNjhkZjI4NzQiLCJpZCI6MzY0MCwic2NvcGVzIjpbImFzciIsImdjIl0sImlhdCI6MTUzODQxODg5OH0.E2p7oe8fLJOtyawv0uT9zBZw4oyKZ6Vt3CZsE0FKeJw';\n        </script>\n        <script src=\"js/cezium/poic.js\"></script>\n    </body>\n</html>")
	(store-in "resources/public/cezium")
	(title "poic"))

([PointCloud_Class40004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [PointCloud_Class40000])
	(%3ACREATION-TIMESTAMP "2021.06.11 16:32:38.238 MSK")
	(%3ACREATOR "ru"))

([PointCloud_Class50000] of  CloFunction

	(source "(let [ts1 (js/Cesium.Cesium3DTileset. #js{:url \"PointCloud/tileset.json\"\n                                                             :maximumScreenSpaceError 0})\n      ps (.-primitives SCENE)\n      ts2 (.add ps ts1)]\n  (.then (.-readyPromise ts2) \n    (fn[ts] (.add ps ts)\n             (.flyToBoundingSphere CAMERA (.-_boundingSphere (.-boundingVolume ts))))))")
	(title "point-cloud []"))

([PointCloud_Class50001] of  CloVar

	(source "{:latitude 59.97\n  :longitude 30.02\n  :height 800\n  :heading 0\n  :pitch -20\n  :roll 0}")
	(title "GOMULODA"))

([PointCloud_Class60000] of  CloFunction

	(source "(set! (.-terrainProvider viewer) (js/Cesium.createWorldTerrain. options))\n(set! (.-depthTestAgainstTerrain (.-globe (.-scene viewer))) false)")
	(title "add-terrain-transparent  [options viewer]"))

([PointCloud_Class90000] of  CloVar

	(source "{:latitude (- 61.172 0.02)\n  :longitude 6.0 \n  :height 400\n  :heading 0\n  :pitch -20\n  :roll 0}")
	(title "FIORD"))

([PointCloud_Class90002] of  CloFuncall

	(source "(ball-gen 6.0 61.172 0 500 \"255 0 0\" \"0 255 0\" \"data/PCloud/BallCloud/ball_cloud.txt\")"))
