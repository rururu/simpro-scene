; Sat Jun 06 14:19:16 MSK 2020
; 
;+ (version "3.5")
;+ (build "Build 663")

([Tsunami_Class0] of  ShareOnto

	(but-deep-copy "Deep Copy Instance/share.onto/deep-copy")
	(but-del-fil "Delete Filtered Instances/share.onto/delfil")
	(but-del-unref "Delete Unreferenced/share.onto/delete-unref")
	(but-find-unref "Find Unreferenced/share.onto/find-unref")
	(but-load-prj "Load Source Project/share.onto/load-src-prj")
	(but-shal-copy "Shallow Copy Instances/share.onto/shal-copy")
	(source-project "DefaultKnowledgeBase(Scenario)"))

([Tsunami_Class1] of  CloProgram

	(cloFunctions
		[Tsunami_Class7]
		[Tsunami_Class11]
		[Tsunami_Class12]
		[Tsunami_Class6]
		[Tsunami_Class9])
	(cloNamespace [Tsunami_Class2])
	(cloVars
		[Tsunami_Class13]
		[Tsunami_Class14]
		[Tsunami_Class15]
		[Tsunami_Class16]
		[Tsunami_Class17]
		[Tsunami_Class70004])
	(title "RA Tsunami"))

([Tsunami_Class10000] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [Tsunami_Class10005])
	(%3ACREATION-TIMESTAMP "2017.12.21 19:25:04.561 MSK")
	(%3ACREATOR "ru"))

([Tsunami_Class10003] of  WorkingPrograms

	(butt-load-progs "Load Programs/protege.core/ldns")
	(cloPrograms
		[Clojure_Class10000]
		[RuleEngine_Class30000]
		[ScenarioN_Class550020]
		[Scenario_Class3]
		[Algorithm_Class10000]
		[Scenario_Class120024]
		[Scenario_Class220003]
		[Scenario_Class250008]
		[ScenarioN_Class510000]
		[ScenarioN_Class330002])
	(title "Tsunami Programs"))

([Tsunami_Class10004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [Tsunami_Class10003])
	(%3ACREATION-TIMESTAMP "2017.12.21 15:23:49.523 MSK")
	(%3ACREATOR "ru"))

([Tsunami_Class10005] of  Openmap

	(components
		[igis_Class2]
		[igis_Class3]
		[igis_Class4]
		[igis_Class12]
		[igis_Class40000]
		[igis_Class40001]
		[igis_Class70000]
		[igis_Class14]
		[igis_Class15]
		[igis_Class16]
		[igis_Class17]
		[igis_Class18]
		[igis_Class19]
		[igis_Class20]
		[igis_Class21]
		[igis_Class22]
		[Scenario_Class60001]
		[igis_Class25]
		[igis_Class26]
		[igis_Class27]
		[igis_Class28]
		[igis_Class29]
		[igis_Class30])
	(Debug "FINE")
	(label "Tsunami Map")
	(Latitude "35.0")
	(layers
		[igis_Class40012]
		[igis_Class1]
		[Tsunami_Class20000]
		[igis_Class40011])
	(Longitude "145.0")
	(Scale "7500000")
	(startUpLayers
		[igis_Class40012]
		[igis_Class1]
		[igis_Class40011]
		[Tsunami_Class20000]))

([Tsunami_Class10006] of  TsunamiRA

	(flood [Tsunami_Class10008])
	(interval SECOND)
	(label "Tsunami1 RA")
	(lifetime 15000)
	(period 1)
	(playground-index 0)
	(poly [Tsunami_Class10007])
	(tabfun [Tsunami_Class10009]))

([Tsunami_Class10007] of  Spill

	(isPolygon TRUE)
	(label "Tsunami1")
	(latitude "35 0")
	(lineColor "FFFFFF00")
	(longitude "145 0")
	(N 600)
	(playground-index 0)
	(radius 1500.0)
	(relative FALSE)
	(speed 350.0))

([Tsunami_Class10008] of  OMTSpline

	(fillColor "500000FF")
	(isPolygon TRUE)
	(label "Tsunami1 Wave")
	(latitude "35 0")
	(lineColor "FF0000FF")
	(longitude "145 0")
	(playground-index 0)
	(relative FALSE))

([Tsunami_Class10009] of  TableFunction

	(title "Tsunami1 Wave Height")
	(x 0.0 1200.0)
	(y 120.0 0.0))

([Tsunami_Class10010] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(mode run)
	(rule-sets
		[ScenarioN_Class550030]
		[Scenario_Class100006]
		[Scenario_Class250011]
		[Scenario_Class17]
		[Scenario_Class340000])
	(steps 1)
	(title "TsunamiRun"))

([Tsunami_Class10011] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [Tsunami_Class10010])
	(%3ACREATION-TIMESTAMP "2017.12.21 19:23:39.979 MSK")
	(%3ACREATOR "ru"))

([Tsunami_Class11] of  CloFunction

	(source ";: Get Elevation - Aster Global Digital Elevation Model V1 2009\n;: Returns map {coord1 elev1coord2 elev2 ..} \n(let [crds (take 20 coords)\n       lats (map first crds)\n       lngs (map second crds)\n       lats (apply str (interpose \",\" lats))\n       lngs (apply str (interpose \",\" lngs))\n       url (str *strm3-url* \"?lats=\" lats \"&lngs=\" lngs \"&username=\" *username*)]\n (try\n  (if-let [dat (slurp url)]\n    (let [v (read-string (str \"[\" dat \"]\"))\n           v (interleave coords v)]\n      (partition 2 v)))\n  (catch Exception e\n   (ctpl e)\n   nil)))")
	(title "call-geonames-20elevations [coords]"))

([Tsunami_Class12] of  CloFunction

	(source "(try\n(vec (map \n  #(if (> (first %1) 0)\n      (cons \n        (if (> aal (second %2)) 1 0) \n        (map (fn [x] (Math/toRadians x)) (first %2)))\n      %1)\n  fl-rcrd \n  crd-els))\n(catch Exception e\n  (println [:ERR (map second crd-els)])\n  (throw e)))")
	(title "recalc-fl-rcrd [fl-rcrd aal crd-els]"))

([Tsunami_Class13] of  CloVar

	(source "\"http://api.geonames.org/srtm3\"")
	(title "^:dynamic *strm3-url*"))

([Tsunami_Class14] of  CloVar

	(source "\"liikalanjoki\"")
	(title "^:dynamic *username*"))

([Tsunami_Class15] of  CloVar

	(source "nil")
	(title "FL-OMP"))

([Tsunami_Class16] of  CloVar

	(source "(volatile! [])")
	(title "FL-RCRD"))

([Tsunami_Class17] of  CloVar

	(source "nil")
	(title "TABFUN"))

([Tsunami_Class18] of  CloProgram

	(cloFunctions
		[Tsunami_Class24]
		[Tsunami_Class25])
	(cloNamespace [Tsunami_Class19])
	(cloVars
		[Tsunami_Class20]
		[Tsunami_Class21]
		[Tsunami_Class22]
		[Tsunami_Class23])
	(title "ETOPOEleLayer"))

([Tsunami_Class19] of  CloNamespace

	(source "(:gen-class\n  :name com.bbn.openmap.layer.etopo.ETOPOEleLayer\n  :extends com.bbn.openmap.layer.etopo.ETOPOLayer\n  :exposes {dataBuffer {:get getDataBuffer}\n                  bufferWidth {:get getBufferWidth}\n                  bufferHeight {:get getBufferHeight}}\n  :post-init pinit)")
	(title "subcla.etoele"))

([Tsunami_Class2] of  CloNamespace

	(source "(:use\n  protege.core\n  c)\n(:import\n  ru.igis.omtab.OMT\n  com.bbn.openmap.omGraphics.OMGraphic)\n(:gen-class\n  :name ru.igis.omtab.ra.TsunamiRA\n  :extends ru.igis.omtab.ra.SpillRepeatAction\n  :post-init pinit)")
	(title "ra.tsunami"))

([Tsunami_Class20] of  CloVar

	(source "nil")
	(title "THIS"))

([Tsunami_Class20000] of  ETOPOLayer

	(class "com.bbn.openmap.layer.etopo.ETOPOEleLayer")
	(contrast "5")
	(label "ETOPO5Ele")
	(minute.spacing "5")
	(number.colors "216")
	(opaque "100")
	(path "data/ETOPO")
	(prettyName "ETOPO5 Elevations Access")
	(view.type "1"))

([Tsunami_Class21] of  CloVar

	(source "nil")
	(title "SCX"))

([Tsunami_Class22] of  CloVar

	(source "nil")
	(title "SCY"))

([Tsunami_Class23] of  CloVar

	(source "nil")
	(title "BUFWID"))

([Tsunami_Class24] of  CloFunction

	(source "(def THIS this)\n(println :THIS this)")
	(title "-pinit [this]"))

([Tsunami_Class25] of  CloFunction

	(source "(let [bwd (or BUFWID (do (def BUFWID (.getBufferWidth THIS)) BUFWID))\n       scy (or SCY (do (def SCY (float (/ (.getBufferHeight THIS) 180.0))) SCY))\n       scx (or SCX (do (def SCX (float (/ bwd 360.0))) SCX))\n       lat_idx (int (* (- 90.0 lat) scy))\n       lon_idx (int (* lon scx))\n       ofs (+ lon_idx (* lat_idx bwd))]\n  (aget (.getDataBuffer THIS) ofs))")
	(title "elevation [[lat lon]]"))

([Tsunami_Class30000] of  CloFuncall

	(source "(compile 'subcla.etoele)"))

([Tsunami_Class30001] of  CloFuncall

	(source "(compile 'ra.tsunami)"))

([Tsunami_Class40000] of  CloProgram

	(cloFunctions [RuleEngine_Class220000])
	(cloNamespace [Clojure_Class300001])
	(title "Tsu CW"))

([Tsunami_Class6] of  CloFunction

	(source "(map #(vector % (subcla.etoele/elevation %)) crd)")
	(title "collect-elevations [crd]"))

([Tsunami_Class7] of  CloFunction

	(source "(vreset! FL-RCRD [])\n(let [tsu (sv obj \"poly\") \n       flo (sv obj \"flood\")\n       tfn (sv obj \"tabfun\")]\n  (println [:TSUNAMI (and tsu (sv tsu \"label\"))\n                :FLOOD (and flo (sv flo \"label\"))\n                :TABFUN (and tfn (sv tfn \"title\"))])\n  (if tsu\n    (def TABFUN (c/create-tabfun tfn)))\n  (if flo\n    (def FL-OMP (.getLocationMarker (OMT/getOrAdd flo)))))")
	(title "-pinit [this obj]"))

([Tsunami_Class70004] of  CloVar

	(source "nil")
	(title "TRA"))

([Tsunami_Class9] of  CloFunction

	(source "(let [spi (.getSpill this)\n       llp (.getLLP spi)\n       crd (map #(Math/toDegrees %) llp)\n       crd (partition 2 crd)\n       len (count crd)\n       els (collect-elevations crd)\n       rad (.getCurrentRadius spi)\n       aal (c/smooth-tabfun rad TABFUN)]\n  (println :R rad :W aal )\n  (if (empty? @FL-RCRD)\n    (vreset! FL-RCRD (map #(cons 1 %) (partition 2 llp)))\n    (vswap! FL-RCRD recalc-fl-rcrd aal els))\n  (.setLocation  FL-OMP \n	(double-array (mapcat rest @FL-RCRD))\n	(OMGraphic/RADIANS))\n  (.spill spi time))")
	(title "-repeat [this ^double time]"))

([Tsunami_Class90009] of  CloFunction

	(source "(let [len (count crd)]\n  (if (<= len 20)\n    (call-geonames-20elevations crd)\n    (concat (call-geonames-20elevations crd)\n	(collect-elevations (take-last (- len 20) crd)))))")
	(title "collect-elevations [crd]"))
