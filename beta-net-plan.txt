(ex 0 ((Instruction :? :?src :?) nil nil) "ExecuteInstruction" -100 (:?fids :?src) #object[clojure.core$eval8202$fn__8203 0x7325a6e1 "clojure.core$eval8202$fn__8203@7325a6e1"])
(e 1 ((Work :? "CHECK") nil nil) "t:Check: Max Solutions -> Optimization")
(i 2 ((GoalR :? :? :? :? :?msl :? :? :? :?) nil nil))
(x 3 ((Solution :? :? :? :? :?) (:?msl) #object[clojure.core$eval8206$fn__8207 0x7d268305 "clojure.core$eval8206$fn__8207@7d268305"]) "t:Check: Max Solutions -> Optimization" -1 (:?fids) #object[clojure.core$eval8210$fn__8211 0x579268b7 "clojure.core$eval8210$fn__8211@579268b7"])
(e 1 ((Work :? "CHECK") nil nil) "t:Check: Goal Start")
(x 4 ((GoalR :?a :?b :? :?mln :?msl :? :?rad "START" :?) nil nil) "t:Check: Goal Start" 0 (:?msl :?a :?rad :?fids :?b :?mln) #object[clojure.core$eval8214$fn__8215 0x98f4f5a "clojure.core$eval8214$fn__8215@98f4f5a"])
(e 1 ((Work :? "CHECK") nil nil) "t:Check: Two Trail1 Connection")
(i 5 ((GoalR :?a :?b :? :? :? :? :? "RUN" :?) nil nil))
(i 6 ((Trail1 :?a :?b1 :?egs1 :? :?e :?sts1) (:?e) #object[clojure.core$eval8218$fn__8219 0x5743e224 "clojure.core$eval8218$fn__8219@5743e224"]))
(x 6 ((Trail1 :?b :?b2 :?egs2 :? :?e :?sts2) (:?sts2 :?sts1) #object[clojure.core$eval8222$fn__8223 0x1eb47d62 "clojure.core$eval8222$fn__8223@1eb47d62"]) "t:Check: Two Trail1 Connection" 0 (:?egs2 :?egs1 :?fids) #object[clojure.core$eval8226$fn__8227 0x5a2769d3 "clojure.core$eval8226$fn__8227@5a2769d3"])
(e 1 ((Work :? "CHECK") nil nil) "t:Check: Longer Trail1 Retract")
(i 3 ((Solution :? :? :? :?pth :?) nil nil))
(x 6 ((Trail1 :? :? :?egs :? :? :?) (:?pth :?egs) #object[clojure.core$eval8230$fn__8231 0x29211852 "clojure.core$eval8230$fn__8231@29211852"]) "t:Check: Longer Trail1 Retract" 0 (:?fids) #object[clojure.core$eval8234$fn__8235 0x613b8d90 "clojure.core$eval8234$fn__8235@613b8d90"])
(e 1 ((Work :? "CHECK") nil nil) "t:Check: Trail1 to Trail0")
(x 7 ((Trail1 :?a :?b :?egs :? :?e "OPEN") nil nil) "t:Check: Trail1 to Trail0" 1 (:?a :?fids :?b :?e :?egs) #object[clojure.core$eval8238$fn__8239 0x5c59b3b8 "clojure.core$eval8238$fn__8239@5c59b3b8"])
(e 1 ((Work :? "CHECK") nil nil) "t:Check -> Extension")
(x 7 (not (Trail1 :? :? :? :? :? "OPEN") nil nil) "t:Check -> Extension" 1 (:?fids) #object[clojure.core$eval8242$fn__8243 0x3dd12011 "clojure.core$eval8242$fn__8243@3dd12011"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension: From Goal Backward")
(i 2 ((GoalR :?a :?b :? :? :? :?mil :? :? :?) nil nil))
(x 7 ((Trail1 :?b :?c :?egs :? :? "OPEN") (:?a :?mil :?b :?egs :?c) #object[clojure.core$eval8246$fn__8247 0x1c135c71 "clojure.core$eval8246$fn__8247@1c135c71"]) "t:Extension: From Goal Backward" -1 (:?fids) #object[clojure.core$eval8251$fn__8252 0x21f9156e "clojure.core$eval8251$fn__8252@21f9156e"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension: From Goal Forward")
(i 2 ((GoalR :?a :?b :? :? :? :?mil :? :? :?) nil nil))
(x 7 ((Trail1 :?a :?c :?egs :? :? "OPEN") (:?a :?mil :?b :?egs :?c) #object[clojure.core$eval8255$fn__8256 0x30aca69a "clojure.core$eval8255$fn__8256@30aca69a"]) "t:Extension: From Goal Forward" -1 (:?fids) #object[clojure.core$eval8260$fn__8261 0x449c936 "clojure.core$eval8260$fn__8261@449c936"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension: Goal Behind Forward")
(i 2 ((GoalR :?a :?b :? :? :? :?mil :? :? :?) nil nil))
(x 7 ((Trail1 :?a :?c :?egs :? :? "OPEN") (:?a :?mil :?b :?egs :?c) #object[clojure.core$eval8264$fn__8265 0x2bffd1a "clojure.core$eval8264$fn__8265@2bffd1a"]) "t:Extension: Goal Behind Forward" -1 (:?a :?fids :?egs :?c) #object[clojure.core$eval8269$fn__8270 0x6b04da46 "clojure.core$eval8269$fn__8270@6b04da46"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension: Goal Behind Backward")
(i 2 ((GoalR :?a :?b :? :? :? :?mil :? :? :?) nil nil))
(x 7 ((Trail1 :?b :?c :?egs :? :? "OPEN") (:?a :?mil :?b :?egs :?c) #object[clojure.core$eval8273$fn__8274 0x3e4939ca "clojure.core$eval8273$fn__8274@3e4939ca"]) "t:Extension: Goal Behind Backward" -1 (:?a :?fids :?egs :?c) #object[clojure.core$eval8278$fn__8279 0x7483574c "clojure.core$eval8278$fn__8279@7483574c"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension -> Too Long")
(i 2 ((GoalR :? :? :? :?mln :? :? :? :? :?) nil nil))
(x 9 ((Trail0 :? :? :?egs :? :? :?) (:?egs :?mln) #object[clojure.core$eval8282$fn__8283 0x9a923eb "clojure.core$eval8282$fn__8283@9a923eb"]) "t:Extension -> Too Long" -1 (:?fids) #object[clojure.core$eval8286$fn__8287 0x44321e72 "clojure.core$eval8286$fn__8287@44321e72"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension: Trail0 Extension")
(x 10 ((Trail0 :?a :?b :?egs :? :?e "OPEN") nil nil) "t:Extension: Trail0 Extension" 0 (:?a :?fids :?b :?e :?egs) #object[clojure.core$eval8290$fn__8291 0x3342f857 "clojure.core$eval8290$fn__8291@3342f857"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension -> Check")
(x 7 ((Trail1 :? :? :? :? :? "OPEN") nil nil) "t:Extension -> Check" 1 (:?fids) #object[clojure.core$eval8303$fn__8304 0x5d15e044 "clojure.core$eval8303$fn__8304@5d15e044"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension -> Optimization")
(x 7 (not (Trail1 :? :? :? :? :? "OPEN") nil nil) "t:Extension -> Optimization" 1 (:?fids) #object[clojure.core$eval8307$fn__8308 0x1de33676 "clojure.core$eval8307$fn__8308@1de33676"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension -> Quasioptimisation")
(i 11 ((Quasisolution :? :? :? :? :?) nil nil))
(i 3 (not (Solution :? :? :? :? :?) nil nil))
(x 7 (not (Trail1 :? :? :? :? :? "OPEN") nil nil) "t:Extension -> Quasioptimisation" 1 (:?fids) #object[clojure.core$eval8311$fn__8312 0x49f66a36 "clojure.core$eval8311$fn__8312@49f66a36"])
(e 8 ((Work :? "EXTENSION") nil nil) "t:Extension -> No Any Solutions")
(i 11 (not (Quasisolution :? :? :? :? :?) nil nil))
(i 3 (not (Solution :? :? :? :? :?) nil nil))
(x 7 (not (Trail1 :? :? :? :? :? "OPEN") nil nil) "t:Extension -> No Any Solutions" 1 () #object[clojure.core$eval8315$fn__8316 0x6dd2a31f "clojure.core$eval8315$fn__8316@6dd2a31f"])
(e 12 ((Work :? "OPTIMIZATION") nil nil) "t:Optimization: Solutions Optimization")
(i 3 ((Solution :?a :?b :? :?pth1 :?) nil nil))
(x 3 ((Solution :?a :?b :? :?pth2 :?) nil nil) "t:Optimization: Solutions Optimization" 0 (:?pth1 :?pth2 :?fids) #object[clojure.core$eval8319$fn__8320 0x1fb76921 "clojure.core$eval8319$fn__8320@1fb76921"])
(e 12 ((Work :? "OPTIMIZATION") nil nil) "t:Optimization: Solutions Optimized")
(i 2 ((GoalR :?a :? :? :? :? :? :? :? :?tit) nil nil))
(i 3 ((Solution :? :? :? :?pth :?) nil nil))
(x 3 (not (Solution :? :? :? :? :?) nil nil) "t:Optimization: Solutions Optimized" 0 (:?a :?tit :?pth) #object[clojure.core$eval8323$fn__8324 0x1b63ac27 "clojure.core$eval8323$fn__8324@1b63ac27"])
(e 13 ((Work :? "QUASIOPTIMIZATION") nil nil) "t:Quasioptimization: Nearest Quasisolution")
(i 2 ((GoalR :?a :?b :? :? :? :? :? :? :?) nil nil))
(i 11 ((Quasisolution :?a :?c1 :? :?pth1 :?) nil nil))
(x 11 ((Quasisolution :?a :?c2 :? :?pth2 :?) nil nil) "t:Quasioptimization: Nearest Quasisolution" 0 (:?pth1 :?c2 :?pth2 :?fids :?b :?c1) #object[clojure.core$eval8330$fn__8331 0x613ed2a7 "clojure.core$eval8330$fn__8331@613ed2a7"])
(e 13 ((Work :? "QUASIOPTIMIZATION") nil nil) "t:Quasioptimization: Quasisolutions optimized")
(i 2 ((GoalR :?a :? :? :? :? :? :? :? :?tit) nil nil))
(i 11 ((Quasisolution :? :? :? :?pth :?) nil nil))
(x 11 (not (Quasisolution :? :? :? :? :?) nil nil) "t:Quasioptimization: Quasisolutions optimized" 0 (:?a :?tit :?pth) #object[clojure.core$eval8334$fn__8335 0x198c5fc4 "clojure.core$eval8334$fn__8335@198c5fc4"])
