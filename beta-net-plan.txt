(e 0 ((CZMLGenerator :? :? :?) nil nil) "bs:Boat on Map")
(i 1 ((Boat :?crs :? :? :? :?lab :? :? :? :? :?) nil nil))
(i 2 ((Clock :? :?t) nil nil))
(x 3 (not (CZMLSpan :? :?lab :? :?) nil nil) "bs:Boat on Map" 0 (:?crs :?lab :?t) #object[clojure.core$eval14466$fn__14467 0x3a5995e3 "clojure.core$eval14466$fn__14467@3a5995e3"])
(e 1 ((Boat :?ocrs :? :? :? :?lab :? :? :? :? :?) nil nil) "bs:Boat Change Course")
(x 4 ((NewCourse :?lab :?ncrs :?) nil nil) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids :?ocrs) #object[clojure.core$eval14472$fn__14473 0x5ba9659b "clojure.core$eval14472$fn__14473@5ba9659b"])
(e 5 ((Boat :?crs :? :? :? :?boat UNDEFINED :? :? :?taa :?) nil nil) "bs:Boat Sail Point")
(x 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Sail Point" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval14477$fn__14478 0x52e41ea5 "clojure.core$eval14477$fn__14478@52e41ea5"])
(ex 1 ((Boat :? :? :? :? :?lab :?slp :?spd :? :? :?) nil nil) "bs:Boat Speed" 0 (:?spd :?lab :?slp) #object[clojure.core$eval14481$fn__14482 0x15dc3a8f "clojure.core$eval14481$fn__14482@15dc3a8f"])
(e 7 ((Onboard :? :?boat :? :?) nil nil) "bs:Boat Pitching")
(i 8 ((Wave :? :?pit :?pin) nil nil))
(i 9 ((BoatPitch :?boat :? :?slp :?tim) nil nil))
(x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval14488$fn__14489 0x635c535a "clojure.core$eval14488$fn__14489@635c535a"]) "bs:Boat Pitching" 0 (:?pit :?pin :?slp :?fids :?boat :?t) #object[clojure.core$eval14492$fn__14493 0x73c97717 "clojure.core$eval14492$fn__14493@73c97717"])
(e 10 ((ShoreControl :?del :?dis :? :?sho) nil nil) "bs:Shore Check")
(i 1 ((Boat :?crs :?ele :? :? :?boat :? :? :? :? :?tim) nil nil))
(i 11 ((Skipper :?boat :? :? :? :? :? :? :? :? :?) nil nil))
(x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval14502$fn__14503 0x12a4efd "clojure.core$eval14502$fn__14503@12a4efd"]) "bs:Shore Check" 0 (:?sho :?dis :?crs :?ele :?fids :?boat :?del :?t) #object[clojure.core$eval14506$fn__14507 0x75560415 "clojure.core$eval14506$fn__14507@75560415"])
(e 1 ((Boat :? :? :? :? :?lab :? :? :?tack :? :?) nil nil) "ws:Wind Veering")
(i 12 ((Wind :? :? :? :? :? VEERING :?) nil nil))
(x 13 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Veering" -1 (:?tack :?lab :?fids) #object[clojure.core$eval14519$fn__14520 0x74914f66 "clojure.core$eval14519$fn__14520@74914f66"])
(e 1 ((Boat :? :? :? :? :?lab :? :? :?tack :? :?) nil nil) "ws:Wind Backing")
(i 14 ((Wind :? :? :? :? :? BACKING :?) nil nil))
(x 13 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Backing" -1 (:?tack :?lab :?fids) #object[clojure.core$eval14523$fn__14524 0x4c58ff2c "clojure.core$eval14523$fn__14524@4c58ff2c"])
(ex 6 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval14527$fn__14528 0x1f561dfc "clojure.core$eval14527$fn__14528@1f561dfc"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval14531$fn__14532 0x5ae5d4af "clojure.core$eval14531$fn__14532@5ae5d4af"])
(e 6 ((Wind :?dir1 :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(x 15 ((WindChange :? :? :? :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval14536$fn__14537 0x24f14aea "clojure.core$eval14536$fn__14537@24f14aea"]) "ws:Wind Change Direction" 0 (:?dir2 :?fids :?dir1) #object[clojure.core$eval14540$fn__14541 0x2f5b60c7 "clojure.core$eval14540$fn__14541@2f5b60c7"])
(ex 6 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval14545$fn__14546 0xcd312d "clojure.core$eval14545$fn__14546@cd312d"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval14549$fn__14550 0x74f9cd37 "clojure.core$eval14549$fn__14550@74f9cd37"])
(ex 13 ((BoatWindShift :? :? :?) nil nil) "ws:Boat Wind Shift End" 0 (:?fids) #object[clojure.core$eval14553$fn__14554 0x5a716f58 "clojure.core$eval14553$fn__14554@5a716f58"])
(e 6 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Small Oscillation")
(i 16 ((WindChange :? :? :? :? :? true :?sint :?sos :?t1 :?) nil nil))
(x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval14557$fn__14558 0x2e587189 "clojure.core$eval14557$fn__14558@2e587189"]) "ws:Small Oscillation" 0 (:?dir :?sos :?sint :?fids :?t2) #object[clojure.core$eval14561$fn__14562 0x47f57936 "clojure.core$eval14561$fn__14562@47f57936"])
(e 6 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Big Oscillation")
(i 16 ((WindChange :? :?bint :?bos :? :? true :? :? :? :?t1) nil nil))
(x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval14565$fn__14566 0x7d5f948a "clojure.core$eval14565$fn__14566@7d5f948a"]) "ws:Big Oscillation" 0 (:?dir :?bos :?fids :?bint :?t2) #object[clojure.core$eval14569$fn__14570 0x2c053fd6 "clojure.core$eval14569$fn__14570@2c053fd6"])
(e 15 ((WindChange :?a :? :? :? :? :? :? :? :? :?) (:?a) #object[clojure.core$eval14576$fn__14577 0x41bcd7e6 "clojure.core$eval14576$fn__14577@41bcd7e6"]) "ws:WindChange First")
(x 15 (not (WindChange :? :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange First" 0 (:?fids) #object[clojure.core$eval14580$fn__14581 0x2d6c2a2e "clojure.core$eval14580$fn__14581@2d6c2a2e"])
(e 17 ((WindChange true :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange Update")
(x 15 ((WindChange :?ass :? :? :? :? :? :? :? :? :?) (:?ass) #object[clojure.core$eval14584$fn__14585 0x2c1600cd "clojure.core$eval14584$fn__14585@2c1600cd"]) "ws:WindChange Update" -1 (:?fids) #object[clojure.core$eval14588$fn__14589 0x29e87116 "clojure.core$eval14588$fn__14589@29e87116"])
(e 0 ((CZMLGenerator :? :? :?) nil nil) "ss:Mark on Map")
(i 18 ((Mark :? :? :? :? :? :? :? :?lab :?lat :? :?lon :? :? :? :? :? :?) nil nil))
(i 2 ((Clock :? :?t) nil nil))
(x 3 (not (CZMLSpan :? :?lab :? :?) nil nil) "ss:Mark on Map" 0 (:?lon :?lab :?lat :?t) #object[clojure.core$eval14592$fn__14593 0xe4c902a "clojure.core$eval14592$fn__14593@e4c902a"])
(e 18 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Skipper Status")
(i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(i 11 ((Skipper :?boat :? :?e :? :? :?mark :? :? :?sts :?) (:?sts) #object[clojure.core$eval14597$fn__14598 0x42bde697 "clojure.core$eval14597$fn__14598@42bde697"]))
(i 1 ((Boat :? :? :? :? :?boat :? :? :? :?taa :?) nil nil))
(x 2 ((Clock :? :?) nil nil) "ss:Skipper Status" 0 (:?fids :?boat :?wnd :?mark :?e :?taa :?sts) #object[clojure.core$eval14601$fn__14602 0x5e319665 "clojure.core$eval14601$fn__14602@5e319665"])
(e 18 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Gainful Beating Course")
(i 19 ((Skipper :?boat :? :?e :? :? :?mark :? :? BEATING :?) nil nil))
(i 1 ((Boat :? :? :? :? :?boat :? :? :? :?taa :?) nil nil))
(i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(x 20 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Gainful Beating Course" 0 (:?boat :?wnd :?mark :?e :?taa) #object[clojure.core$eval14607$fn__14608 0x343b2c74 "clojure.core$eval14607$fn__14608@343b2c74"])
(e 18 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course")
(i 21 ((Skipper :?boat :? :? :? :? :?mark :? :? CAN-ON-MARK :?) nil nil))
(i 1 ((Boat :? :? :? :? :?boat :? :? :? :? :?) nil nil))
(x 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course" 0 (:?boat :?mark) #object[clojure.core$eval14613$fn__14614 0x5e1c3719 "clojure.core$eval14613$fn__14614@5e1c3719"])
(e 22 ((Route :? :?mm :?tit) nil nil) "ss:Mark Near and Abaft")
(i 18 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil))
(i 11 ((Skipper :?boat :? :? :? :?lap :?mark :?rad :?tit :?sts :?) (:?sts) #object[clojure.core$eval14619$fn__14620 0x7338eb13 "clojure.core$eval14619$fn__14620@7338eb13"]))
(i 1 ((Boat :? :? :? :? :?boat :? :? :? :? :?) nil nil))
(x 2 ((Clock :? :?) (:?rad :?boat :?mark) #object[clojure.core$eval14624$fn__14625 0x21e8c9af "clojure.core$eval14624$fn__14625@21e8c9af"]) "ss:Mark Near and Abaft" 0 (:?tit :?mm :?fids :?boat :?mark :?lap) #object[clojure.core$eval14628$fn__14629 0x4cdd096a "clojure.core$eval14628$fn__14629@4cdd096a"])
(e 22 ((Route :? :?mm :?tit) nil nil) "ss:Start Route")
(x 23 ((Skipper :?boat :? :? :? 0 "NIL" :? :?tit :? :?) nil nil) "ss:Start Route" 0 (:?tit :?mm :?fids :?boat) #object[clojure.core$eval14632$fn__14633 0x73c64b17 "clojure.core$eval14632$fn__14633@73c64b17"])
(e 19 ((Skipper :?boat :? :?e :? :? :? :? :? BEATING :?) nil nil) "ss:Big Header on Beating")
(i 24 ((BoatWindShift :?boat :? HEADER) nil nil))
(i 1 ((Boat :? :? :? :? :?boat :? :? :?tack :?taa :?) nil nil))
(i 6 ((Wind :?dir :? :? :? :? :? :?sid) (:?sid) #object[clojure.core$eval14637$fn__14638 0x4792560f "clojure.core$eval14637$fn__14638@4792560f"]))
(x 20 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Big Header on Beating" -1 (:?dir :?tack :?boat :?e :?taa) #object[clojure.core$eval14641$fn__14642 0x20d04ae3 "clojure.core$eval14641$fn__14642@20d04ae3"])
(e 20 ((Advice :? :?dir1 :? "BIG HEADER NEW COURSE") nil nil) "ss:End of Big Header")
(x 6 ((Wind :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval14645$fn__14646 0x46291ca "clojure.core$eval14645$fn__14646@46291ca"]) "ss:End of Big Header" 0 (:?fids) #object[clojure.core$eval14649$fn__14650 0x45bdeca2 "clojure.core$eval14649$fn__14650@45bdeca2"])
(e 25 ((Skipper :?boat :?del :?e :? :? :? :? :? SHORE-AHEAD :?) nil nil) "ss:Shore Ahead")
(i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(i 1 ((Boat :?crs :? :? :? :?boat :? :? :?tack :?taa :?) nil nil))
(x 2 ((Clock :? :?t) nil nil) "ss:Shore Ahead" 0 (:?tack :?crs :?fids :?boat :?wnd :?del :?t :?e :?taa) #object[clojure.core$eval14653$fn__14654 0x104af834 "clojure.core$eval14653$fn__14654@104af834"])
(e 26 ((Skipper :?boat :? :? :? :? :? :? :? OFF-SHORE :?t1) nil nil) "ss:Gone off Shore")
(x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval14661$fn__14662 0x32ef2f8c "clojure.core$eval14661$fn__14662@32ef2f8c"]) "ss:Gone off Shore" 0 (:?fids :?boat) #object[clojure.core$eval14665$fn__14666 0x229304da "clojure.core$eval14665$fn__14666@229304da"])
(e 0 ((CZMLGenerator :? :? :?) nil nil) "sim:Start Simulation")
(x 2 (not (Clock :? :?) nil nil) "sim:Start Simulation" 0 () #object[clojure.core$eval14669$fn__14670 0x86134d6 "clojure.core$eval14669$fn__14670@86134d6"])
(e 2 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval14673$fn__14674 0x4fadf6b6 "clojure.core$eval14673$fn__14674@4fadf6b6"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval14677$fn__14678 0x4753380 "clojure.core$eval14677$fn__14678@4753380"])
(ex 27 ((MapObEvent :? :?obj :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval14681$fn__14682 0x3efa4200 "clojure.core$eval14681$fn__14682@3efa4200"])
(ex 7 ((Onboard :? :? :?tim :?) (:?tim) #object[clojure.core$eval14685$fn__14686 0x3fbc168d "clojure.core$eval14685$fn__14686@3fbc168d"]) "czm:Onboard Init" 0 (:?tim :?fids) #object[clojure.core$eval14689$fn__14690 0x1f044f8a "clojure.core$eval14689$fn__14690@1f044f8a"])
(e 0 ((CZMLGenerator :?del :? :?) nil nil) "czm:Check Onboard")
(i 7 ((Onboard :? :?lab :?tim :?) (:?tim) #object[clojure.core$eval14693$fn__14694 0x32c086d9 "clojure.core$eval14693$fn__14694@32c086d9"]))
(x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval14697$fn__14698 0x5e4638c3 "clojure.core$eval14697$fn__14698@5e4638c3"]) "czm:Check Onboard" 0 (:?lab :?fids :?del :?t) #object[clojure.core$eval14701$fn__14702 0x19155f8 "clojure.core$eval14701$fn__14702@19155f8"])
(ex 3 ((CZMLSpan :? :?obj :?ops :?tim) (:?ops) #object[clojure.core$eval14705$fn__14706 0x3c54325f "clojure.core$eval14705$fn__14706@3c54325f"]) "czm:CZMLSpan Init" 0 (:?tim :?obj :?fids :?ops) #object[clojure.core$eval14709$fn__14710 0xa149d42 "clojure.core$eval14709$fn__14710@a149d42"])
(e 0 ((CZMLGenerator :?del :? :?vis) nil nil) "czm:CZML Navob Leg Generation")
(i 7 ((Onboard :? :?onb :? :?) nil nil))
(i 3 ((CZMLSpan :? :?obj :?ops :?tim) nil nil))
(x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval14713$fn__14714 0x657b3ce3 "clojure.core$eval14713$fn__14714@657b3ce3"]) "czm:CZML Navob Leg Generation" -1 (:?onb :?obj :?fids :?ops :?del :?vis :?t) #object[clojure.core$eval14718$fn__14719 0x6ece8b21 "clojure.core$eval14718$fn__14719@6ece8b21"])
